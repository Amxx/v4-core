// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PoolManager gas tests ERC20 tokens #initialize initialize pool with no hooks and no protocol fee 1`] = `
Object {
  "calldataByteLength": 196,
  "gasUsed": 54647,
}
`;

exports[`PoolManager gas tests ERC20 tokens #mint above current price add to position existing 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 124872,
}
`;

exports[`PoolManager gas tests ERC20 tokens #mint above current price new position mint first in range 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 193763,
}
`;

exports[`PoolManager gas tests ERC20 tokens #mint above current price second position in same range 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 124872,
}
`;

exports[`PoolManager gas tests ERC20 tokens #mint around current price add to position existing 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 177072,
}
`;

exports[`PoolManager gas tests ERC20 tokens #mint around current price new position mint first in range 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 301455,
}
`;

exports[`PoolManager gas tests ERC20 tokens #mint around current price second position in same range 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 177072,
}
`;

exports[`PoolManager gas tests ERC20 tokens #mint below current price add to position existing 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 125592,
}
`;

exports[`PoolManager gas tests ERC20 tokens #mint below current price new position mint first in range 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 279548,
}
`;

exports[`PoolManager gas tests ERC20 tokens #mint below current price second position in same range 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 125592,
}
`;

exports[`PoolManager gas tests ERC20 tokens #swapExact0For1 first swap in block moves tick, no initialized crossings 1`] = `
Object {
  "calldataByteLength": 324,
<<<<<<< HEAD
  "gasUsed": 159378,
=======
  "gasUsed": 192287,
>>>>>>> f4d259f (added four bytes4 constants to the Hooks.sol library that can be returned to indicate to the pool manager to gracefully return before a call, thus preserving any storage writes made by the hook.  Added in checks and handling to the PoolManager.sol to gracefully return should it receive such a selector. added test for verification of hook storage persistence.  Included verification of NOP on pool itself when return is triggered by hook)
}
`;

exports[`PoolManager gas tests ERC20 tokens #swapExact0For1 first swap in block with no tick movement 1`] = `
Object {
  "calldataByteLength": 324,
<<<<<<< HEAD
  "gasUsed": 153673,
=======
  "gasUsed": 186517,
>>>>>>> f4d259f (added four bytes4 constants to the Hooks.sol library that can be returned to indicate to the pool manager to gracefully return before a call, thus preserving any storage writes made by the hook.  Added in checks and handling to the PoolManager.sol to gracefully return should it receive such a selector. added test for verification of hook storage persistence.  Included verification of NOP on pool itself when return is triggered by hook)
}
`;

exports[`PoolManager gas tests ERC20 tokens #swapExact0For1 first swap in block, large swap crossing a single initialized tick 1`] = `
Object {
  "calldataByteLength": 324,
<<<<<<< HEAD
  "gasUsed": 180371,
=======
  "gasUsed": 211111,
>>>>>>> f4d259f (added four bytes4 constants to the Hooks.sol library that can be returned to indicate to the pool manager to gracefully return before a call, thus preserving any storage writes made by the hook.  Added in checks and handling to the PoolManager.sol to gracefully return should it receive such a selector. added test for verification of hook storage persistence.  Included verification of NOP on pool itself when return is triggered by hook)
}
`;

exports[`PoolManager gas tests ERC20 tokens #swapExact0For1 first swap in block, large swap crossing several initialized ticks 1`] = `
Object {
  "calldataByteLength": 324,
<<<<<<< HEAD
  "gasUsed": 221839,
=======
  "gasUsed": 252793,
>>>>>>> f4d259f (added four bytes4 constants to the Hooks.sol library that can be returned to indicate to the pool manager to gracefully return before a call, thus preserving any storage writes made by the hook.  Added in checks and handling to the PoolManager.sol to gracefully return should it receive such a selector. added test for verification of hook storage persistence.  Included verification of NOP on pool itself when return is triggered by hook)
}
`;

exports[`PoolManager gas tests ERC20 tokens #swapExact0For1 first swap in block, large swap, no initialized crossings 1`] = `
Object {
  "calldataByteLength": 324,
<<<<<<< HEAD
  "gasUsed": 170981,
=======
  "gasUsed": 204024,
>>>>>>> f4d259f (added four bytes4 constants to the Hooks.sol library that can be returned to indicate to the pool manager to gracefully return before a call, thus preserving any storage writes made by the hook.  Added in checks and handling to the PoolManager.sol to gracefully return should it receive such a selector. added test for verification of hook storage persistence.  Included verification of NOP on pool itself when return is triggered by hook)
}
`;

exports[`PoolManager gas tests ERC20 tokens #swapExact0For1 second swap in block moves tick, no initialized crossings 1`] = `
Object {
  "calldataByteLength": 324,
<<<<<<< HEAD
  "gasUsed": 159378,
=======
  "gasUsed": 192287,
>>>>>>> f4d259f (added four bytes4 constants to the Hooks.sol library that can be returned to indicate to the pool manager to gracefully return before a call, thus preserving any storage writes made by the hook.  Added in checks and handling to the PoolManager.sol to gracefully return should it receive such a selector. added test for verification of hook storage persistence.  Included verification of NOP on pool itself when return is triggered by hook)
}
`;

exports[`PoolManager gas tests ERC20 tokens #swapExact0For1 second swap in block with no tick movement 1`] = `
Object {
  "calldataByteLength": 324,
<<<<<<< HEAD
  "gasUsed": 153761,
=======
  "gasUsed": 186606,
>>>>>>> f4d259f (added four bytes4 constants to the Hooks.sol library that can be returned to indicate to the pool manager to gracefully return before a call, thus preserving any storage writes made by the hook.  Added in checks and handling to the PoolManager.sol to gracefully return should it receive such a selector. added test for verification of hook storage persistence.  Included verification of NOP on pool itself when return is triggered by hook)
}
`;

exports[`PoolManager gas tests ERC20 tokens #swapExact0For1 second swap in block, large swap crossing a single initialized tick 1`] = `
Object {
  "calldataByteLength": 324,
<<<<<<< HEAD
  "gasUsed": 172543,
=======
  "gasUsed": 205458,
>>>>>>> f4d259f (added four bytes4 constants to the Hooks.sol library that can be returned to indicate to the pool manager to gracefully return before a call, thus preserving any storage writes made by the hook.  Added in checks and handling to the PoolManager.sol to gracefully return should it receive such a selector. added test for verification of hook storage persistence.  Included verification of NOP on pool itself when return is triggered by hook)
}
`;

exports[`PoolManager gas tests ERC20 tokens #swapExact0For1 second swap in block, large swap crossing several initialized ticks 1`] = `
Object {
  "calldataByteLength": 324,
<<<<<<< HEAD
  "gasUsed": 213986,
=======
  "gasUsed": 247116,
>>>>>>> f4d259f (added four bytes4 constants to the Hooks.sol library that can be returned to indicate to the pool manager to gracefully return before a call, thus preserving any storage writes made by the hook.  Added in checks and handling to the PoolManager.sol to gracefully return should it receive such a selector. added test for verification of hook storage persistence.  Included verification of NOP on pool itself when return is triggered by hook)
}
`;

exports[`PoolManager gas tests Native Tokens #mint above current price add to position existing 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 117815,
}
`;

exports[`PoolManager gas tests Native Tokens #mint above current price new position mint first in range 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 184942,
}
`;

exports[`PoolManager gas tests Native Tokens #mint above current price second position in same range 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 117815,
}
`;

exports[`PoolManager gas tests Native Tokens #mint around current price add to position existing 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 170012,
}
`;

exports[`PoolManager gas tests Native Tokens #mint around current price new position mint first in range 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 292631,
}
`;

exports[`PoolManager gas tests Native Tokens #mint around current price second position in same range 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 170012,
}
`;

exports[`PoolManager gas tests Native Tokens #mint below current price add to position existing 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 130941,
}
`;

exports[`PoolManager gas tests Native Tokens #mint below current price new position mint first in range 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 286234,
}
`;

exports[`PoolManager gas tests Native Tokens #mint below current price second position in same range 1`] = `
Object {
  "calldataByteLength": 260,
  "gasUsed": 130941,
}
`;

exports[`PoolManager gas tests Native Tokens #swapExact0For1 first swap in block moves tick, no initialized crossings 1`] = `
Object {
  "calldataByteLength": 324,
<<<<<<< HEAD
  "gasUsed": 146745,
=======
  "gasUsed": 179642,
>>>>>>> f4d259f (added four bytes4 constants to the Hooks.sol library that can be returned to indicate to the pool manager to gracefully return before a call, thus preserving any storage writes made by the hook.  Added in checks and handling to the PoolManager.sol to gracefully return should it receive such a selector. added test for verification of hook storage persistence.  Included verification of NOP on pool itself when return is triggered by hook)
}
`;

exports[`PoolManager gas tests Native Tokens #swapExact0For1 first swap in block with no tick movement 1`] = `
Object {
  "calldataByteLength": 324,
  "gasUsed": 141040,
}
`;

exports[`PoolManager gas tests Native Tokens #swapExact0For1 first swap in block, large swap crossing a single initialized tick 1`] = `
Object {
  "calldataByteLength": 324,
  "gasUsed": 198466,
}
`;

exports[`PoolManager gas tests Native Tokens #swapExact0For1 first swap in block, large swap crossing several initialized ticks 1`] = `
Object {
  "calldataByteLength": 324,
  "gasUsed": 209206,
}
`;

exports[`PoolManager gas tests Native Tokens #swapExact0For1 first swap in block, large swap, no initialized crossings 1`] = `
Object {
  "calldataByteLength": 324,
  "gasUsed": 191379,
}
`;

exports[`PoolManager gas tests Native Tokens #swapExact0For1 second swap in block moves tick, no initialized crossings 1`] = `
Object {
  "calldataByteLength": 324,
  "gasUsed": 179642,
}
`;

exports[`PoolManager gas tests Native Tokens #swapExact0For1 second swap in block with no tick movement 1`] = `
Object {
  "calldataByteLength": 324,
  "gasUsed": 173961,
}
`;

exports[`PoolManager gas tests Native Tokens #swapExact0For1 second swap in block, large swap crossing a single initialized tick 1`] = `
Object {
  "calldataByteLength": 324,
  "gasUsed": 192813,
}
`;

exports[`PoolManager gas tests Native Tokens #swapExact0For1 second swap in block, large swap crossing several initialized ticks 1`] = `
Object {
  "calldataByteLength": 324,
  "gasUsed": 234471,
}
`;
